{"version":3,"sources":["components/Header/Header.js","components/Home/Form.js","components/Home/Weather.js","components/Home/Error.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","src","alt","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","target","rel","Form","search","saveSearch","saveConsult","useState","error","saveError","city","country","handleChange","e","name","value","message","onSubmit","preventDefault","trim","onChange","placeholder","Weather","result","main","kelvin","parseInt","temp","temp_max","temp_min","Error","role","App","component","consult","saveResult","useEffect","a","url","fetch","response","json","cod","consultApi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9a22f11.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = () => {\n  return(\n    <nav className=\"navbar navbar-expand-lg fixed-top navbar-custom sticky\">\n      <div className=\"container\">\n        <a className=\"navbar-brand logo text-uppercase\" href=\"index.html\">\n          <img src=\"images/logo-dark.png\" alt=\"\" height=\"22\" />\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <i className=\"mdi mdi-menu\"></i>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav ml-auto navbar-center\" id=\"mySidenav\">\n          </ul>\n          <div className=\"navbar-button d-none d-lg-inline-block\">\n            <a href=\"https://github.com/eslimdaga\" target=\"_blank\" className=\"btn btn-sm btn-primary btn-round\" rel=\"noreferrer\">Ver CÃ³digo</a>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default Header;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Error} from \"./index\";\n\nconst Form = ({search,saveSearch,saveConsult}) => {\n\n  const [ error, saveError ] = useState(false);\n\n  //Extract city and country\n  const { city,country } = search;\n\n  //Function that places the elements in the state\n  const handleChange = e => {\n    //Updating state\n    saveSearch({\n      ...search,\n      [ e.target.name ] : e.target.value\n    });\n  }\n\n  //When the user gives submit in the form\n  const handleSubmit = e => {\n    e.preventDefault();\n    //Validation\n    if(city.trim() === \"\" || country.trim() === \"\"){\n      saveError(true);\n      return;\n    }\n\n    saveError(false);\n    saveConsult(true);\n  }\n\n  return (\n    <div className=\"col-lg-5 offset-lg-1\">\n      <div className=\"home-registration-form bg-white p-5 mt-4\">\n        <h5 className=\"form-title mb-4 text-center font-weight-bold\">Â¿Que clima tiene? ðŸ¤”</h5>\n        {error ? <Error message=\"Todos los datos son obligatorios\" />: null}\n        <form onSubmit={handleSubmit} className=\"registration-form\">\n          <label className=\"text-muted\">Ciudad :</label>\n          <input\n            className=\"form-control mb-4 registration-input-box\"\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            value={city}\n            onChange={handleChange}\n          />\n          <label className=\"text-muted\">PaÃ­s :</label>\n          <select\n            className=\"form-control mb-4 registration-input-box\"\n            placeholder=\"Selecciona un PaÃ­s\"\n            id=\"country\"\n            name=\"country\"\n            value={country}\n            onChange={handleChange}\n          >\n            <option>-Selecciones un PaÃ­s</option>\n            <option value=\"PE\">PerÃº</option>\n            <option value=\"MX\">MÃ©xico</option>\n            <option value=\"BO\">Bolivia</option>\n          </select>\n          <input\n            type=\"submit\"\n            value=\"Busca Clima\"\n            className=\"btn btn-primary w-100 mt-3\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  search : PropTypes.object.isRequired,\n  saveSearch : PropTypes.func.isRequired,\n  saveConsult : PropTypes.func.isRequired\n}\n\nexport default Form;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Weather = ({result}) => {\n\n  //Extract Values\n  const { name,main } = result;\n\n  if(!name){\n    return null;\n  }\n\n  //ÂºKelvin\n  const kelvin = 273.15;\n\n  return (\n    <div className=\"col-lg-6\">\n      <div className=\"home-contact mt-4\">\n        <h1 className=\"home-title mt-3\">El clima de {name} es :</h1>\n        <h1 className=\"counter-count text-primary\">\n          {parseInt(main.temp - kelvin)}\n          <span> &#x2103; </span>\n        </h1>\n        <p className=\"text-primary font-weight-bold\">La temperatura mÃ¡xima de {name} es :</p>\n        <h4 className=\"counter-count text-primary\">\n          {parseInt(main.temp_max - kelvin)}\n          <span> &#x2103; </span>\n        </h4>\n        <p className=\"text-primary font-weight-bold\">La temperatura minima de {name} es :</p>\n        <h4 className=\"counter-count text-primary\">\n          {parseInt(main.temp_min - kelvin)}\n          <span> &#x2103; </span>\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nWeather.propTypes = {\n  result : PropTypes.object.isRequired\n}\n\nexport default Weather;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({message}) => {\n  return(\n    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      <strong>{message}</strong>\n    </div>\n  );\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired\n}\n\nexport default Error;","import React, { Fragment,useState,useEffect } from \"react\";\nimport { Header } from \"./components/Header/index\";\nimport { Error, Form, Weather } from \"./components/Home/index\";\n\nfunction App() {\n\n  const [ search, saveSearch ] = useState({\n    city : \"\",\n    country : \"\"\n  });\n\n  const [ consult, saveConsult ] = useState(false);\n  const [ result, saveResult ] = useState({});\n  const [error, saveError] = useState(false);\n\n  const { city, country } = search;\n\n  useEffect(() => {\n    const consultApi = async() => {\n      if(consult){\n        const appId = \"cc42c6d5566e5e7f5f6caa9c2284bd28\";\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${appId}`\n        const response = await fetch(url);\n        const result = await response.json();\n        saveResult(result);\n        saveConsult(false);\n\n        //Detect if have error\n        if (result.cod === \"404\") {\n          saveError(true);\n        } else {\n          saveError(false);\n        }\n      }\n    }\n    consultApi();\n  }, [consult,city,country]);\n\n  let component;\n  if(error){\n    component = <Error message = \"No hay resultados\"/>\n  }else{\n    component = <Weather\n      result={result}\n    />\n  }\n\n  return (\n    <Fragment>\n      <Header/>\n      <section className=\"bg-home align-items-center\" id=\"home\">\n        <div className=\"container\">\n          <div className=\"row align-items-center\">\n            <Form\n              search = {search}\n              saveSearch = {saveSearch}\n              saveConsult = {saveConsult}\n            />\n            {component}\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}